CHAINPREFIX=/opt/rs97-toolchain
CROSS_COMPILE=$(CHAINPREFIX)/usr/bin/mipsel-linux-
CC = $(CROSS_COMPILE)gcc
CXX = $(CROSS_COMPILE)g++
STRIP = $(CROSS_COMPILE)strip
SYSROOT     := $(CHAINPREFIX)/usr/mipsel-buildroot-linux-uclibc/sysroot
SDL_CFLAGS  := $(shell $(SYSROOT)/usr/bin/sdl-config --cflags)
SDL_LIBS    := $(shell $(SYSROOT)/usr/bin/sdl-config --libs)

#-msym32 -mlong-calls
#-fprofile-generate -fprofile-dir=/mnt/int_sd/profile
#-fprofile-use -msym32 -mlong-calls
CFLAGS 		= -Ofast -fprofile-use -msym32 -mlong-calls -fdata-sections -ffunction-sections -mno-abicalls -fno-pic -fno-pie -mhard-float -mips32 -mno-mips16 -std=gnu89 -I./main/emu -I./main/sdl -I./main/headers ${DEFINES} 
CFLAGS		+= -mno-relax-pic-calls -mlong32 -mlocal-sdata -mframe-header-opt -mno-check-zero-division -mfp32 -mgp32 -mno-embedded-data -fno-pic -mno-interlink-compressed -mno-mt -mno-micromips -mno-interlink-mips16
CFLAGS		+= $(SDL_CFLAGS)
DEFINES 	= -DRS97
LDFLAGS 	= -Wl,--as-needed -Wl,--gc-sections -flto -s -lSDL 
OUT	 		= oswan.dge

SDL 		= main/sdl/main.c main/sdl/menu.c main/sdl/input.c main/sdl/game_input.c
CPU 		= main/emu/cpu/nec.c
CORE 		= main/emu/WS.c main/emu/WSFileio.c main/emu/WSRender.c
DRAWING 	= main/rs97/gui_drawing.c main/rs97/drawing.c
 
# Sound support
CORE 	   += main/emu/WSApu.c 
DEFINES    += -DSOUND_ON -DSOUND_EMULATION -DFRAMESKIP -DNOROMLOADER -DNATIVE_RESOLUTION

# Enable this to support zip files
# Here, Support for zips is enabled
#CFLAGS 	   +=-DZIP_SUPPORT -I./minizip
#LDFLAGS	   +=-lz
#THIRD_PARTY = minizip/unzip.o minizip/ioapi.o

SOURCES 	= ${SDL} ${CPU} ${CORE} ${DRAWING} 
SOURCES	   += ${THIRD_PARTY}

OBJS 		= ${SOURCES:.c=.o}

all		: ${OUT}

${OUT}	: ${OBJS}
		${CC} -o ${OUT} ${SOURCES} ${CFLAGS} ${LDFLAGS}
	
clean	:
		rm ${OBJS} ${OUT} ./oswan-rs97/${OUT} ./${ZIPFILE}
